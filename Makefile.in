# Which compiler to use
#CC = cc
hasGPU=0
CC = icpc
NVCC = nvcc

CUINCLUDES = -I/home/niuq/code/gpu/cusplibrary -I/home/niuq/code/cub-1.0.2
CUOPTFLAGS = -arch sm_20 -O0 -g -G
CUOPTFLAGS = -arch sm_20 -O3 

MKL_FLAGS=-m64 -w -I"/opt/intel/composer_xe_2013.4.183/mkl/include"
MKL_LDFLAGS=-Wl,--start-group "/opt/intel/composer_xe_2013.4.183/mkl/lib/intel64/libmkl_intel_lp64.a" "/opt/intel/composer_xe_2013.4.183/mkl/lib/intel64/libmkl_intel_thread.a" "/opt/intel/composer_xe_2013.4.183/mkl/lib/intel64/libmkl_core.a" -Wl,--end-group -L"/opt/intel/composer_xe_2013.4.183/mkl/../compiler/lib/intel64" -liomp5 -lpthread -lm -ldl 

GPERF_HOME=/home/niuq/tools/gperftools-2.1/build
GPERF_FLAGS=-I$(GPERF_HOME)/include
GPERF_LDFLAGS=$(GPERF_HOME)/lib/libprofiler.a $(GPERF_HOME)/lib/libtcmalloc.a

# What optimization level to use
#OPTFLAGS = -fast -openmp
OPTFLAGS = -O0 -openmp -vec-report1 -restrict -Dprofiling
OPTFLAGS = -O3 -openmp -vec-report1 -restrict #-Dprofiling #-DAGGR



LIBDIR=nlibs
LIBNAME=libnrmcl.a

# What options to be used by the compiler
COPTIONS= -Wno-write-strings -g -std=c++0x
#COPTIONS =  -Wall -g
#COPTIONS = -g
#COPTIONS = -Wno-write-strings

CUDA_HOME = /opt/cuda/5.5
CINCLUDES = -I.

# What options to be used by the loader
#LDOPTIONS = -L$(CUDA_HOME)/lib -lcudart -Wl,-rpath,$(CUDA_HOME)/lib 
ifeq ($(hasGPU), 1)
OPTFLAGS+=-Denable_gpu
LDOPTIONS= -L$(CUDA_HOME)/lib64 -Wl,-rpath,$(CUDA_HOME)/lib64 -lcudart -lcusparse
CINCLUDES+= -I$(CUDA_HOME)/include
endif

# What archiving to use
AR = ar rv

# What to use for indexing the archive
RANLIB = ranlib
#RANLIB = ar -ts
#RANLIB = 


